name: Full CI/CD Pipeline for 5G Throughput Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    name: ♻️ Environment Setup
    runs-on: ubuntu-latest
    steps:
      - name: ✅ Checkout Repository
        uses: actions/checkout@v3

      - name: 🔧 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: 💪 Install Core Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black pytest

  lint-format:
    name: 🤔 Lint and Auto-format
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: 🔧 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: 💪 Install flake8 and black
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: ⚡ Run flake8 (non-blocking)
        run: |
          flake8 . || true

      - name: ✏️ Auto-format with Black
        run: |
          black .

      - name: 📆 Commit format changes (if any)
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git diff --cached --quiet || git commit -m "Auto-format with Black"

      - name: 🚀 Push formatting fixes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

  test:
    name: 🔬 Unit Tests
    runs-on: ubuntu-latest
    needs: lint-format
    steps:
      - uses: actions/checkout@v3

      - name: 🔧 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: 🌍 Run Pytest
        run: |
          pip install pytest
          pytest || true

  docker-build:
    name: 🚧 Docker Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: ✅ Checkout Code
        uses: actions/checkout@v3

      - name: 🚗 Build Trainer Docker Image
        run: |
          docker build -f docker/Dockerfile.train -t ghcr.io/${{ github.repository }}/trainer:latest .

      - name: 🚗 Build Dashboard Docker Image
        run: |
          docker build -f docker/Dockerfile.serve -t ghcr.io/${{ github.repository }}/dashboard:latest .

  publish:
    name: 📄 Publish Docker Images
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: 🔑 Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Push Trainer Image
        run: |
          docker push ghcr.io/${{ github.repository }}/trainer:latest

      - name: 📤 Push Dashboard Image
        run: |
          docker push ghcr.io/${{ github.repository }}/dashboard:latest

  notify:
    name: 📢 Notify Completion
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: 💬 Echo Success
        run: echo "🎉 CI/CD pipeline completed successfully!"
